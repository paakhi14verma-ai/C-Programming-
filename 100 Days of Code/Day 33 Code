Q65: Search in a sorted array using binary search.

/*
Sample Test Cases:
Input 1:
5
1 3 5 7 9
7
Output 1:
Found at index 3

Input 2:
5
1 3 5 7 9
6
Output 2:
-1

*/

Code:
#include <stdio.h>

int main() {
    int n, key, low, high, mid;
    
    scanf("%d", &n);
    
    int arr[n];
    
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    
    scanf("%d", &key);
    
    low = 0;
    high = n - 1;
    int found = -1;
    
    while (low <= high) {
        mid = (low + high) / 2;
        if (arr[mid] == key) {
            found = mid;
            break;
        } else if (arr[mid] < key) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    
    if (found != -1)
        printf("Found at index %d\n", found);
    else
        printf("-1\n");
    
    return 0;
}





Q66: Insert an element in a sorted array at the appropriate position.

/*
Sample Test Cases:
Input 1:
5
1 2 4 5 6
3
Output 1:
1 2 3 4 5 6

*/

Code:
#include <stdio.h>

int main() {
    int n, x, pos;
    
    scanf("%d", &n);
    
    int arr[100];  
    
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    
    scanf("%d", &x);
    
    pos = n;  // assume element goes at the end
    for (int i = 0; i < n; i++) {
        if (x < arr[i]) {
            pos = i;
            break;
        }
    }
    
    for (int i = n; i > pos; i--) {
        arr[i] = arr[i - 1];
    }
    
    arr[pos] = x;
    n++;  // increase size
    
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    
    return 0;
}
